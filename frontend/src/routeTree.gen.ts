/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as IndexImport } from "./routes/index";
import { Route as BooksBookIdRouteImport } from "./routes/books/$bookId/route";
import { Route as BooksBookIdIndexImport } from "./routes/books/$bookId/index";
import { Route as BooksBookIdCommentsRouteImport } from "./routes/books/$bookId/comments/route";
import { Route as BooksBookIdCommentsIndexImport } from "./routes/books/$bookId/comments/index";

// Create Virtual Routes

const AboutIndexLazyImport = createFileRoute("/about/")();

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const AboutIndexLazyRoute = AboutIndexLazyImport.update({
  path: "/about/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/about/index.lazy").then((d) => d.Route));

const BooksBookIdRouteRoute = BooksBookIdRouteImport.update({
  path: "/books/$bookId",
  getParentRoute: () => rootRoute,
} as any);

const BooksBookIdIndexRoute = BooksBookIdIndexImport.update({
  path: "/",
  getParentRoute: () => BooksBookIdRouteRoute,
} as any);

const BooksBookIdCommentsRouteRoute = BooksBookIdCommentsRouteImport.update({
  path: "/comments",
  getParentRoute: () => BooksBookIdRouteRoute,
} as any);

const BooksBookIdCommentsIndexRoute = BooksBookIdCommentsIndexImport.update({
  path: "/",
  getParentRoute: () => BooksBookIdCommentsRouteRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/books/$bookId": {
      id: "/books/$bookId";
      path: "/books/$bookId";
      fullPath: "/books/$bookId";
      preLoaderRoute: typeof BooksBookIdRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/about/": {
      id: "/about/";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AboutIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/books/$bookId/comments": {
      id: "/books/$bookId/comments";
      path: "/comments";
      fullPath: "/books/$bookId/comments";
      preLoaderRoute: typeof BooksBookIdCommentsRouteImport;
      parentRoute: typeof BooksBookIdRouteImport;
    };
    "/books/$bookId/": {
      id: "/books/$bookId/";
      path: "/";
      fullPath: "/books/$bookId/";
      preLoaderRoute: typeof BooksBookIdIndexImport;
      parentRoute: typeof BooksBookIdRouteImport;
    };
    "/books/$bookId/comments/": {
      id: "/books/$bookId/comments/";
      path: "/";
      fullPath: "/books/$bookId/comments/";
      preLoaderRoute: typeof BooksBookIdCommentsIndexImport;
      parentRoute: typeof BooksBookIdCommentsRouteImport;
    };
  }
}

// Create and export the route tree

interface BooksBookIdCommentsRouteRouteChildren {
  BooksBookIdCommentsIndexRoute: typeof BooksBookIdCommentsIndexRoute;
}

const BooksBookIdCommentsRouteRouteChildren: BooksBookIdCommentsRouteRouteChildren =
  {
    BooksBookIdCommentsIndexRoute: BooksBookIdCommentsIndexRoute,
  };

const BooksBookIdCommentsRouteRouteWithChildren =
  BooksBookIdCommentsRouteRoute._addFileChildren(
    BooksBookIdCommentsRouteRouteChildren,
  );

interface BooksBookIdRouteRouteChildren {
  BooksBookIdCommentsRouteRoute: typeof BooksBookIdCommentsRouteRouteWithChildren;
  BooksBookIdIndexRoute: typeof BooksBookIdIndexRoute;
}

const BooksBookIdRouteRouteChildren: BooksBookIdRouteRouteChildren = {
  BooksBookIdCommentsRouteRoute: BooksBookIdCommentsRouteRouteWithChildren,
  BooksBookIdIndexRoute: BooksBookIdIndexRoute,
};

const BooksBookIdRouteRouteWithChildren =
  BooksBookIdRouteRoute._addFileChildren(BooksBookIdRouteRouteChildren);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/books/$bookId": typeof BooksBookIdRouteRouteWithChildren;
  "/about": typeof AboutIndexLazyRoute;
  "/books/$bookId/comments": typeof BooksBookIdCommentsRouteRouteWithChildren;
  "/books/$bookId/": typeof BooksBookIdIndexRoute;
  "/books/$bookId/comments/": typeof BooksBookIdCommentsIndexRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/about": typeof AboutIndexLazyRoute;
  "/books/$bookId": typeof BooksBookIdIndexRoute;
  "/books/$bookId/comments": typeof BooksBookIdCommentsIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/books/$bookId": typeof BooksBookIdRouteRouteWithChildren;
  "/about/": typeof AboutIndexLazyRoute;
  "/books/$bookId/comments": typeof BooksBookIdCommentsRouteRouteWithChildren;
  "/books/$bookId/": typeof BooksBookIdIndexRoute;
  "/books/$bookId/comments/": typeof BooksBookIdCommentsIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/books/$bookId"
    | "/about"
    | "/books/$bookId/comments"
    | "/books/$bookId/"
    | "/books/$bookId/comments/";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/about" | "/books/$bookId" | "/books/$bookId/comments";
  id:
    | "__root__"
    | "/"
    | "/books/$bookId"
    | "/about/"
    | "/books/$bookId/comments"
    | "/books/$bookId/"
    | "/books/$bookId/comments/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  BooksBookIdRouteRoute: typeof BooksBookIdRouteRouteWithChildren;
  AboutIndexLazyRoute: typeof AboutIndexLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BooksBookIdRouteRoute: BooksBookIdRouteRouteWithChildren,
  AboutIndexLazyRoute: AboutIndexLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/books/$bookId",
        "/about/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/books/$bookId": {
      "filePath": "books/$bookId/route.tsx",
      "children": [
        "/books/$bookId/comments",
        "/books/$bookId/"
      ]
    },
    "/about/": {
      "filePath": "about/index.lazy.tsx"
    },
    "/books/$bookId/comments": {
      "filePath": "books/$bookId/comments/route.tsx",
      "parent": "/books/$bookId",
      "children": [
        "/books/$bookId/comments/"
      ]
    },
    "/books/$bookId/": {
      "filePath": "books/$bookId/index.tsx",
      "parent": "/books/$bookId"
    },
    "/books/$bookId/comments/": {
      "filePath": "books/$bookId/comments/index.tsx",
      "parent": "/books/$bookId/comments"
    }
  }
}
ROUTE_MANIFEST_END */
